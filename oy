#!/bin/sh
oy_list() {
	for task_key in $(oy_repeat_today); do
		oy_open "$task_key"
	done
	oy_list_open
	oy_list_done 0
}

oy_repeat_today() {
	sqlite3 "$OY_DB" 'select task_key from vw_repeat_tasks'
}

oy_list_open() {
	sqlite3 "$OY_DB" "
    select  task_key,
            description,
            cast(days_old as varchar) || case when days_old = 1 then ' day' else ' days' end as age,
            tags
    from vw_open_tasks"
}

oy_list_done() {
	oy_days_ago="$1"
	printf "\e[9m"
	sqlite3 "$OY_DB" "
    select  task_key,
            description,
            cast(days_old as varchar) || case when days_old = 1 then ' day' else ' days' end as age,
            tags
    from vw_done_tasks
    where days_old = $oy_days_ago"
	printf "\e[0m"
}

oy_add() {
	oy_txt=$(echo "$1" | sed "s/'/\\'/g")
	sqlite3 "$OY_DB" '
	insert into task_tag (txt, task_key, set_name, cargo)
  select 1, coalesce(max(task_key),count(1))+1, '\''version'\'', '\'"$oy_txt"\'' from task_tag
  union
  select '\''open'\'', coalesce(max(task_key),count(1))+1, '\''status'\'', null from task_tag'
}

oy_edit() {
	oy_key="$1"
	oy_txt=$(echo "$2" | sed "s/'/\\'/g")
	sqlite3 "$OY_DB" '
	insert into task_tag (txt, task_key, set_name, cargo)
  select *, '\'"$oy_txt"\'' from vw_next_version
  where task_key = '"$oy_key"
}

oy_done() {
	oy_tag "$1" 'status' 'done'
}

oy_open() {
	oy_tag "$1" 'status' 'open'
}

oy_repeat() {
	oy_tag "$1" 'repeat' 'on' "$2"
}

oy_new() {
	sqlite3 "$OY_DB" <"$OY_DIR/new.sql" && printf "Created %s\n" "$OY_DB" >&2
}

oy_tag() {
	if [ "$#" -ge 3 ]; then
		oy_set=$(echo "$2" | sed "s/'/\\'/g")
		oy_txt=$(echo "$3" | sed "s/'/\\'/g")
		if [ "$#" = "4" ]; then
			oy_car=$(echo "$4" | sed "s/'/\\'/g")
			sqlite3 "$OY_DB" 'insert into task_tag (task_key, set_name, txt, cargo)
      values ('"$1"', '\'"$oy_set"\'', '\'"$oy_txt"\'', '\'"$oy_car"\'')'
		else
			sqlite3 "$OY_DB" 'insert into task_tag (task_key, set_name, txt)
      values ('"$1"', '\'"$oy_set"\'', '\'"$oy_txt"\'')'
		fi
	else
		oy_err_exit 'tag needs at least 3 arguments'
	fi
}

oy_bootstrap() {
	oy_dep_check "sqlite3"
	if [ -z "$OY_DB" ]; then
		oy_dep_check "readlink"
		OY_PATH=$(readlink -f "$0")
		OY_DIR="${OY_PATH%/*}"
		OY_DB="$OY_DIR/oy.db"
	fi
	[ -e "$OY_DB" ] || oy_new
}

oy_dep_check() {
	command -v "$1" >/dev/null && return 0
	oy_err_exit "Didn't find the utility '$1' on this system"
}

oy_err_exit() {
	printf "%s\n" "$1" >&2
	exit 1
}

oy_help() {
	printf 'oy [command|list]

Commands
  a|add  <desc>                   add a task
  d|done <#>                      mark task as done
  e|edit <#> <desc>               edit task description
  h|help                          print this help
  l|list                          print open tasks & tasks done in the past 24h
  o|open <#>                      mark task as open
  t|tag  <#> <set> <name> [cargo] tag this task
'
}

oy_main() {
	oy_bootstrap
	[ "$#" -eq 0 ] && oy_list && exit 0
	oy_a="$1"
	shift
	case "$oy_a" in
	"a" | "add") oy_add "$1" ;;
	"d" | "done") oy_done "$1" ;;
	"e" | "edit") oy_edit "$1" "$2" ;;
	"l" | "list") oy_list ;;
	"o" | "open") oy_open "$1" ;;
	"t" | "tag") oy_tag "$@" ;;
	*) oy_help ;;
	esac
}

[ "${0##*/}" = "oy" ] && oy_main "$@"
true
