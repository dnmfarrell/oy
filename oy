#!/bin/sh
oy_lis() {
	sqlite3 "$OY_DB" '
    select task_key, description, created_l, tags
    from vw_open_tasks'
	printf "\e[9m"
	sqlite3 "$OY_DB" '
    select task_key, description, created_l, tags
    from vw_done_tasks'
	printf "\e[0m"
}

oy_add() {
	oy_txt=$(echo "$1" | sed "s/'/\\'/g")
	sqlite3 "$OY_DB" '
	insert into task_tag (txt, task_key, set_name, cargo)
  select 1, coalesce(max(task_key),count(1))+1, '\''version'\'', '\'"$oy_txt"\'' from task_tag
  union
  select '\''open'\'', coalesce(max(task_key),count(1))+1, '\''status'\'', null from task_tag'
}

oy_edit() {
	oy_key="$1"
	oy_txt=$(echo "$2" | sed "s/'/\\'/g")
	sqlite3 "$OY_DB" '
	insert into task_tag (txt, task_key, set_name, cargo)
  select *, '\'"$oy_txt"\'' from vw_next_version
  where task_key = '"$oy_key"
}

oy_don() {
	sqlite3 "$OY_DB" '
	insert into task_tag (txt, task_key, set_name) values
  ('\''done'\'', '"$1"', '\''status'\'')'
}

oy_new() {
	sqlite3 "$OY_DB" <"$OY_DIR/new.sql" && printf "Created %s\n" "$OY_DB" >&2
}

oy_bootstrap() {
	oy_dep_check "sqlite3"
	if [ -z "$OY_DB" ]; then
		oy_dep_check "readlink"
		OY_PATH=$(readlink -f "$0")
		OY_DIR="${OY_PATH%/*}"
		OY_DB="$OY_DIR/oy.db"
	fi
	[ -e "$OY_DB" ] || oy_new
}

oy_dep_check() {
	command -v "$1" >/dev/null && return 0
	oy_err_exit "Didn't find the utility '$1' on this system"
}

oy_err_exit() {
	printf "%s\n" "$1" >&2
	exit 1
}

oy_help() {
	printf 'oy [Option]

Options
  a|add  <desc>       add a task
  d|done <#>          mark task as done
  e|edit <#> <desc>   edit task description
  h|help              print this help
'
}

oy_main() {
	oy_bootstrap
	[ "$#" -eq 0 ] && oy_lis && exit 0
	oy_a="$1"
	shift
	case "$oy_a" in
	"a" | "add") oy_add "$1" ;;
	"d" | "done") oy_don "$1" ;;
	"e" | "edit") oy_edit "$1" "$2" ;;
	*) oy_help ;;
	esac
}

[ "${0##*/}" = "oy" ] && oy_main "$@"
true
