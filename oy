#!/bin/sh
OY_DB=${OY_DB-oy.db}

oy_lis() {
	sqlite3 "$OY_DB" '
    select task.*, vw.created_l, vw.tags
    from task
    join vw_open_tasks vw on vw.task_key = task.key'
	printf "\e[9m"
	sqlite3 "$OY_DB" '
    select task.*, vw.created_l, vw.tags
    from task
    join vw_done_tasks vw on vw.task_key = task.key'
	printf "\e[0m"
}

oy_add() {
	oy_txt=$(echo "$1" | sed "s/'/\\'/g")
	sqlite3 "$OY_DB" '
  begin transaction;
  insert into task (txt) values ('\'"$oy_txt"\'');
	insert into task_tag (txt, task_key, set_key)
	select 1, max(key), 1 from task
  union
	select '\''open'\'', max(key), 2 from task;
  commit'
}

oy_edit() {
	oy_key="$1"
	oy_txt=$(echo "$2" | sed "s/'/\\'/g")
	sqlite3 "$OY_DB" '
  begin transaction;
  insert into task_tag (txt, cargo, task_key, set_key)
  select * from vw_next_version
  where task_key = '"$oy_key"';
  update task set txt = '\'"$oy_txt"\''
  where key = '"$oy_key"';
  commit'
}

oy_don() {
	sqlite3 "$OY_DB" "insert into task_tag (task_key, set_key, tag_key) values
  ($1, 2, 3)"
}

oy_new() {
	sqlite3 "$OY_DB" <./new.sql && printf "Created %s\n" "$OY_DB"
}

oy_bootstrap() {
	oy_dep_check "sqlite3"
	[ -e "$OY_DB" ] || oy_new
}

oy_dep_check() {
	command -v "$1" >/dev/null && return 0
	oy_err_exit "Didn't find the utility '$1' on this system"
}

oy_err_exit() {
	printf "%s\n" "$1" >&2
	exit 1
}

oy_help() {
	printf 'oy [Option]

Options
  a|add  <desc>       add a task
  d|done <#>          mark task as done
  e|edit <#> <desc>   edit task description
  h|help              print this help
'
}

oy_main() {
	oy_bootstrap
	[ "$#" -eq 0 ] && oy_lis && exit 0
	oy_a="$1"
	shift
	case "$oy_a" in
	"a" | "add") oy_add "$1" ;;
	"d" | "done") oy_don "$1" ;;
	"e" | "edit") oy_edit "$1" "$2" ;;
	*) oy_help ;;
	esac
}

[ "${0##*/}" = "oy" ] && oy_main "$@"
true
