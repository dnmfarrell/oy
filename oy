#!/bin/sh
oy_list() {
	for task_key in $(sqlite3 "$OY_DB" 'select task_key from vw_repeat_tasks'); do
		oy_open "$task_key"
	done
	if [ -z "$1" ]; then
		sqlite3 "$OY_DB" 'select * from vw_open_tasks'
	fi
	printf "\e[9m"
	sqlite3 "$OY_DB" "select task_key,description,age,props
	from vw_done_tasks
	where date(completed, 'localtime') = date('now', 'localtime', '-${1-0} days')"
	printf "\e[0m"
}

oy_compact() {
	sqlite3 "$OY_DB" 'delete from task_tag where ROWID in (
		select a.ROWID from task_tag a
		left join vw_task_tags_first_and_last v on v.key = a.key
		where v.key is null)'
}

oy_add() {
	[ "$#" -eq 0 ] && oy_err_exit 'add requires at least 1 task description'
	for t in "$@"; do
		oy_txt=$(echo "$t" | sed "s/'/\\'/g")
		sqlite3 "$OY_DB" '
	insert into task_tag (txt, task_key, set_name, cargo)
  select 1, coalesce(max(task_key),count(1))+1,'\''version'\'', '\'"$oy_txt"\''
  from task_tag
  union
  select '\''open'\'', coalesce(max(task_key),count(1))+1, '\''status'\'', null
  from task_tag'
	done
}

oy_edit() {
	[ "$#" -eq 2 ] && oy_err_exit 'edit needs a task key and description'
	oy_key="$1"
	oy_txt=$(echo "$2" | sed "s/'/\\'/g")
	sqlite3 "$OY_DB" '
	insert into task_tag (txt, task_key, set_name, cargo)
  select *, '\'"$oy_txt"\'' from vw_next_version
  where task_key = '"$oy_key"
}

oy_done() {
	[ "$#" -eq 0 ] && oy_err_exit 'done needs at least 1 task key'
	for key in "$@"; do oy_prop "$key" 'status' 'done'; done
}

oy_open() {
	[ "$#" -eq 0 ] && oy_err_exit 'open needs at least 1 task key'
	for key in "$@"; do oy_prop "$key" 'status' 'open'; done
}

oy_new() {
	sqlite3 "$OY_DB" <"$OY_DIR/tables.sql" &&
		sqlite3 "$OY_DB" <"$OY_DIR/views.sql" && printf "Created %s\n" "$OY_DB" >&2
}

oy_prop() {
	if [ "$#" -ge 3 ]; then
		oy_set=$(echo "$2" | sed "s/'/\\'/g")
		oy_txt=$(echo "$3" | sed "s/'/\\'/g")
		if [ "$#" = "4" ]; then
			oy_car=$(echo "$4" | sed "s/'/\\'/g")
			sqlite3 "$OY_DB" 'insert into task_tag (task_key, set_name, txt, cargo)
      values ('"$1"', '\'"$oy_set"\'', '\'"$oy_txt"\'', '\'"$oy_car"\'')'
		else
			sqlite3 "$OY_DB" 'insert into task_tag (task_key, set_name, txt)
      values ('"$1"', '\'"$oy_set"\'', '\'"$oy_txt"\'')'
		fi
	else
		oy_err_exit 'prop needs 3 or 4 arguments'
	fi
}

oy_tag() {
	[ "$#" -lt 2 ] && oy_err_exit 'tag requires at least 2 arguments'
	if [ "$1" = "del" ]; then
		shift
		oy_key="$1"
		oy_qry_key="-1"
	else
		oy_key="$1"
		oy_qry_key="$1"
	fi
	shift
	oy_new_tags=$({
		sqlite3 "$OY_DB" "select tag from vw_tags where task_key=$oy_qry_key"
		for tag in "$@"; do
			echo "$tag"
		done
	} | sort -u | awk 'BEGIN { sep="" } { printf "%s%s", sep, $0; sep="," }
    END { printf "\n" }') && oy_prop "$oy_key" 'tags' "$oy_new_tags"
}

oy_bootstrap() {
	oy_dep_check "sqlite3"
	oy_dep_check "readlink"
	OY_PATH=$(readlink -f "$0")
	OY_DIR="${OY_PATH%/*}"
	OY_DB="${OY_DB-$OY_DIR/oy.db}"
	[ -e "$OY_DB" ] || oy_new
}

oy_dep_check() {
	command -v "$1" >/dev/null && return 0
	oy_err_exit "Didn't find the utility '$1' on this system"
}

oy_err_exit() {
	printf "%s\n" "$1" >&2
	exit 1
}

oy_help() {
	printf 'oy [command|list]

Commands
  a|add  <desc> [desc ...]           add task(s)
  compact                            delete all intermediate task data
  d|done <#> [# ...]                 mark task(s) as done
  e|edit <#> <desc>                  edit task description
  h|help                             print this help
  l|list [#]                         print open & tasks done today or -# days
                                     ago
  o|open <#> [# ...]                 re-open task(s)
  p|prop <#> <set> <name> [cargo]    add/update a property of a task
  t|tag  [del] <#> <name> [name ...] delete all and/or add tag(s) to a task
'
}

oy_main() {
	oy_bootstrap
	[ "$#" -eq 0 ] && oy_list && exit 0
	oy_a="$1"
	shift
	case "$oy_a" in
	"a" | "add") oy_add "$@" ;;
	"compact") oy_compact ;;
	"d" | "done") oy_done "$@" ;;
	"e" | "edit") oy_edit "$@" ;;
	"l" | "list") oy_list "$@" ;;
	"o" | "open") oy_open "$@" ;;
	"p" | "prop") oy_prop "$@" ;;
	"t" | "tag") oy_tag "$@" ;;
	*) oy_help ;;
	esac
}

[ "${0##*/}" = "oy" ] && oy_main "$@"
true
